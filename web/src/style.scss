* {
  box-sizing: border-box;
  outline: none;
}
html {
  font-size: 13px;
}

body {
  margin: 0;
  font-family: Arial, Helvetica, sans-serif;
  line-height: 1.2rem;
  background: #f1f1f1;
}

a {
  color: #999;
}

$colors: (
  primary: #db9e3f,
  "white": #fff,
  "black": #222,
  "grey": #999,
  "grey-1": #666,
  "light": #f9f9f9,
);
//text
@each $var in (left, center, right) {
  .text-#{$var} {
    text-align: $var;
  }
}
@each $colorKey, $color in $colors {
  .text-#{$colorKey} {
    color: $color;
  }
  .bg-#{$colorKey}{
      background: $color;
  }
}

//
$base-font-size: 1rem;
$font-sizes: (
    xxs:0.6154,
  xs: 0.7692,
  sm: 0.9231,
  md: 1,
  lg: 1.076,
  xl: 1.2308,
);

@each $sizeKey, $size in $font-sizes {
  .fs-#{$sizeKey} {
    font-size: $size * $base-font-size;
  }
}
//flex
.d-flex {
  display: flex;
}
$flex-jc: (
  start: flex-start,
  end: flex-end,
  center: center,
  between: space-between,
  around: space-around,
);

@each $key, $value in $flex-jc {
  .jc-#{$key} {
    justify-content: $value;
  }
}

$flex-al: (
  start: flex-start,
  end: flex-end,
  center: center,
  stretch: stretch,
);

@each $key, $value in $flex-al {
  .al-#{$key} {
    align-items: $value;
  }
}
.flex-column {
  flex-direction: column;
}

.flex-1 {
  flex: 1;
}
.flex-grow-1 {
  flex-grow: 1;
}

$spacing-types: (
  m: margin,
  p: padding,
);
$spacing-directions: (
  t: top,
  l: left,
  r: right,
  b: bottom,
);
$spacing-base-size: 1rem;
$spacing-sizes: (
  0: 0,
  1: 0.25,
  2: 0.5,
  3: 1,
  4: 1.5,
  5: 3,
);

@each $typeKey,$type in $spacing-types{
    @each $sizeKey,$size in $spacing-sizes{
        .#{$typeKey}-#{$sizeKey}{
            #{type}:$sizeKey*$spacing-base-size
        }
    }
    @each $sizeKey,$size in $spacing-sizes{
        .#{$typeKey}y-#{$sizeKey}{
            #{type}-top:$sizeKey*$spacing-base-size;
            #{type}-bottom:$sizeKey*$spacing-base-size;
        }
        .#{$typeKey}x-#{$sizeKey}{
            #{type}-left:$sizeKey*$spacing-base-size;
            #{type}-right:$sizeKey*$spacing-base-size;
        }
    }
    @each $directionKey,$direction in$spacing-directions{
        @each $sizeKey,$size in $spacing-sizes{
            .#{$typeKey}#{$directionKey}-#{$sizeKey} {
                #{$type}-#{$direction}:$size*$spacing-base-size
            } 
        }
    }
    
}

.btn{
    border: none;
    border-radius: 0.1538rem;
    font-size: map-get($font-sizes, 'sm')*$base-font-size;
    padding: 0.2rem 0.5rem;
}
